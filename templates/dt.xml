<templateSet group="dt">
  <template name="auto" value="@Autowired private $cls$ $var$;" description="autowired field" toReformat="false" toShortenFQNames="true">
    <variable name="cls" expression="typeOfVariable(VAR)" defaultValue="" alwaysStopAt="true" />
    <variable name="var" expression="suggestVariableName()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="thr" value="throw RtnError.gen($error$.INSTANCE);" toReformat="false" toShortenFQNames="true">
    <variable name="error" expression="subtypes(RtnError)" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="xlapi" value="@Cmd(&quot;$api_desc$&quot;)&#10;@CmdTag(SilvanCmdTags.v1_6_for_client)&#10;@CmdAuthor(&quot;guoyufeng&quot;)&#10;@CmdSession(type = CmdSessionType.COMPELLED)&#10;@CmdParams({&#10;    &#10;})&#10;@CmdReturn&#10;public Object $api_name$(XLHttpRequest request, XLHttpResponse response) {&#10;    int login_user_id = getMainParam(request, response).getUser_id();&#10;    Json_$api_name$ result = null;&#10;    return JsonObjectUtils.getRtnAndDataJsonObject(Rtn.OK, result);&#10;}" description="add a xunlei style api" toReformat="false" toShortenFQNames="true">
    <variable name="api_desc" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="api_name" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="xlparam" value="@CmdParam(name = $field_define_class$.$param_field$, type = $param_type$.class, desc = &quot;$param_desc$&quot;)," description="add xl param" toReformat="false" toShortenFQNames="true">
    <variable name="field_define_class" expression="" defaultValue="&quot;SilvanParam&quot;" alwaysStopAt="true" />
    <variable name="param_field" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="param_type" expression="" defaultValue="&quot;Integer&quot;" alwaysStopAt="true" />
    <variable name="param_desc" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="getint" value="int $field_name$ = request.getParameterInteger($field_class$.$field_name$, $defaultValue$)" description="get int from XLHttpRequest" toReformat="false" toShortenFQNames="true">
    <variable name="field_name" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="field_class" expression="" defaultValue="&quot;SilvanParam&quot;" alwaysStopAt="true" />
    <variable name="defaultValue" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="getstr" value="String $field_name$ = request.getParameter($field_class$.$field_name$, $defaultValue$)" description="get string from XLHttpRequest" toReformat="false" toShortenFQNames="true">
    <variable name="field_name" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="field_class" expression="" defaultValue="&quot;SilvanParam&quot;" alwaysStopAt="true" />
    <variable name="defaultValue" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="getlong" value="long $field_name$ = request.getParameterLong($field_class$.$field_name$, $defaultValue$)" description="get long from XLHttpRequest" toReformat="false" toShortenFQNames="true">
    <variable name="field_name" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="field_class" expression="" defaultValue="&quot;SilvanParam&quot;" alwaysStopAt="true" />
    <variable name="defaultValue" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="mock" value="public static $CLASS_NAME$ MOCK() {&#10;    return JsonObjectUtils.parseJson(&quot;$END$&quot;,$CLASS_NAME$.class);&#10;}" description="add mock data function" toReformat="false" toShortenFQNames="true">
    <variable name="CLASS_NAME" expression="className()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="uid" value="int login_user_id = getMainParam(request, response).getUser_id();" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="isempty" value="if (CollectionTools.isEmpty($source_list$)) {&#10;    return Lists.newArrayList();&#10;}" description="return empty list if source list is empty" toReformat="false" toShortenFQNames="true">
    <variable name="source_list" expression="variableOfType(&quot;List&quot;)" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="uidopt" value="int login_user_id = getUserIdSilently(request, response, false);" description="login_user_id optional" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="single" value="public static $CLASS_NAME$ INSTANCE;&#10;&#10;public $CLASS_NAME$() {&#10;    INSTANCE = this;&#10;}" description="single instance" toReformat="false" toShortenFQNames="true">
    <variable name="CLASS_NAME" expression="className()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="getbool" value="boolean $field_name$ = request.getParameterBoolean($field_class$.$field_name$, $defaultValue$)" toReformat="false" toShortenFQNames="true">
    <variable name="field_name" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="field_class" expression="" defaultValue="&quot;SilvanParam&quot;" alwaysStopAt="true" />
    <variable name="defaultValue" expression="" defaultValue="&quot;false&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="logger" value="private static final Logger log = LoggerFactory.getLogger(ClassCmd.class.getName());" description="logger instance" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="fake" value="public static final $class_name$ FAKE = JsonObjectUtils.parseJson(&quot;$raw_json$&quot;, $class_name$.class);" description="fake a object by raw json" toReformat="false" toShortenFQNames="true">
    <variable name="class_name" expression="className()" defaultValue="" alwaysStopAt="true" />
    <variable name="raw_json" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="okand" value="return JsonObjectUtils.getRtnAndDataJsonObject(Rtn.OK, $data$);" description="return ok and data as result" toReformat="false" toShortenFQNames="true">
    <variable name="data" expression="suggestVariableName()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="xlparamkt" value="CmdParam(name = SilvanParam.$NAME$, type = $TYPE$::class, desc = arrayOf(&quot;$END$&quot;))" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="TYPE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
</templateSet>