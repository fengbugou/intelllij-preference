<templateSet group="dt_kotlin">
  <template name="auto" value="@Autowired&#10;private lateinit var $VARNAME$: $VARCLASS$" description="" toReformat="false" toShortenFQNames="true">
    <variable name="VARNAME" expression="kotlinSuggestVariableName()" defaultValue="&quot;bean&quot;" alwaysStopAt="true" />
    <variable name="VARCLASS" expression="" defaultValue="&quot;cls&quot;" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="replaceautowired" value="private val (\w+): (\w+)\? = null&#10;private lateinit var $1: $2" description="replace auto wired" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="xlapi" value="@Cmd(desc = &quot;$END$&quot;,&#10;        params = [CmdParam(name = &quot;&quot;, desc = &quot;&quot;, type = String::class)],&#10;        returnValue = [&quot;&quot;&quot;&#10;        {&#10;&#10;        }&#10;                &quot;&quot;&quot;]&#10;    )&#10;    @RequestMapping(&quot;/$API_PATH$&quot;)&#10;    @ResponseBody&#10;    fun $API_PATH_CAMEL$(request: HttpServletRequest): Any {&#10;        return JsonResp.JUST_OK&#10;    }" description="xlapi" toReformat="false" toShortenFQNames="true">
    <variable name="API_PATH" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="API_PATH_CAMEL" expression="camelCase($API_PATH$)" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="xlparam" value="CmdParam(name = SilvanParam.$NAME$, type = $TYPE$::class, desc = arrayOf(&quot;$END$&quot;))" description="" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="TYPE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="uid" value="val login_user_id = getMainParamSilently(request, response).user_id" description="" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="getstr" value="val $field_name$ = request.getParameter(&quot;$field_name$&quot;, $defaultValue$)" description="get string from XLHttpRequest" toReformat="false" toShortenFQNames="true">
    <variable name="field_name" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="defaultValue" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="getbool" value="val $field_name$ = request.getParameterBoolean(&quot;$field_name$&quot;, $defaultValue$)" description="get bool from XLHttpRequest" toReformat="false" toShortenFQNames="true">
    <variable name="field_name" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="defaultValue" expression="" defaultValue="&quot;false&quot;" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="getint" value="val $field_name$ = request.getParameterInteger(&quot;$field_name$&quot;, $defaultValue$)" description="get int from XLHttpRequest" toReformat="false" toShortenFQNames="true">
    <variable name="field_name" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="defaultValue" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="getlong" value="val $field_name$ = request.getParameterLong(&quot;$field_name$&quot;, $defaultValue$)" description="get long from XLHttpRequest" toReformat="false" toShortenFQNames="true">
    <variable name="field_name" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="defaultValue" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="clienti" value="val clientInfo = ClientInfo.of(request);" description="new ClientInfo" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
</templateSet>